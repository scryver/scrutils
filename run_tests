#!/bin/bash

display_usage() {
    echo "This script can build and run tests and analysis."
    echo ""
    echo "Usage: run_tests [arguments]"
    echo ""
    echo "Arguments:"
    echo "  -h|--help           : Display this help text"
    echo "  -a|--all            : Build and run all tests and analysis"
    echo "  -b|--build          : Build all sources"
    echo "  -c|--check          : Static analysis of all sources"
    echo "  -o|--coverage       : Run coverage based on executed code"
    echo "  -t|--test           : Run all unit tests"
    echo "  -tname|--test=name  : Run unit test for name"
    echo "  --backend=name      : Use library name for window and input (sfml or glfw)"
}

TEMP=$(getopt -o abt::och -l all,build,test::,coverage,check,backend:,help \
     -n 'run_tests' -- "$@")

if [ $? != 0 ] || [ $# == 0 ] ; then
    display_usage
    exit 1
fi

# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"

RunBuild=0
RunTestScrAth=0
RunTestScrIlity=0
RunTestScrUts=0
RunTestScrIng=0
RunTestScrIles=0
RunTestScrOgl=0
RunCoverage=0
RunStaticCheck=0
Backend="glfw"

while true; do
    case "$1" in
        -a|--all)
            echo "Running everything"
            RunBuild=1
            RunTestScrAth=1
            RunTestScrIlity=1
            RunTestScrUts=1
            RunTestScrIng=1
            RunTestScrIles=1
            RunTestScrOgl=1
            RunCoverage=1
            RunStaticCheck=1
            shift
            ;;
        -b|--build)
            echo "Building sources"
            RunBuild=1
            shift
            ;;
        -t|--test)
            echo "Running tests"
            case "$2" in
                ""|"all")
                    RunTestScrAth=1
                    RunTestScrIlity=1
                    RunTestScrUts=1
                    RunTestScrIng=1
                    RunTestScrIles=1
                    RunTestScrOgl=1
                    shift 2
                    ;;
                "math")     RunTestScrAth=1;    shift 2 ;;
                "utility")  RunTestScrIlity=1;  shift 2 ;;
                "inputs")   RunTestScrUts=1;    shift 2 ;;
                "timing")   RunTestScrIng=1;    shift 2 ;;
                "files")    RunTestScrIles=1;   shift 2 ;;
                "opengl")   RunTestScrOgl=1;    shift 2 ;;
                *)          echo "Unrecognised test $2"; exit 1 ;;
            esac
            ;;
        -o|--coverage)
            echo "Running coverage"
            RunCoverage=1
            shift
            ;;
        -c|--check)
            echo "Running CppCheck static analyzer"
            RunStaticCheck=1
            shift
            ;;
        --backend)
            echo "Using $2 as backend"
            case "$2" in
                "glfw"|"GLFW")
                    Backend="glfw"
                    shift 2
                    ;;
                "sfml"|"SFML")
                    Backend="sfml"
                    shift 2
                    ;;
                *)          echo "Unrecognised backend $2"; exit 1 ;;
            esac
            ;;
        -h|--help)
            display_usage
            exit 0
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "Unrecognized option '$1'"
            display_usage
            exit 1
            ;;
    esac
done
for arg do echo "Unrecognized option '$arg'" ; display_usage ; exit 1 ; done

if [ $RunBuild == 1 ]; then
    if [ $Backend == "glfw" ]; then
        scons -Q --coverage --backend=glfw      || exit 1
    elif [ $Backend == "sfml" ]; then
        scons -Q --coverage                     || exit 1
    fi
fi

if [ $RunTestScrAth == 1 ]; then
    ./build/test/testScrAth                 || exit 1
fi
if [ $RunTestScrIlity == 1 ]; then
    ./build/test/testScrIlity               || exit 1
fi
if [ $RunTestScrUts == 1 ]; then
    ./build/test/testScrUts                 || exit 1
fi
if [ $RunTestScrIng == 1 ]; then
    ./build/test/testScrIng                 || exit 1
fi
if [ $RunTestScrIles == 1 ]; then
    ./build/test/testScrIles                || exit 1
fi
if [ $RunTestScrOgl == 1 ]; then
    ./build/test/testScrOgl                 || exit 1
fi

if [ $RunCoverage == 1 ]; then
    ./gcoverager
fi

if [ $RunStaticCheck == 1 ]; then
    if [ $Backend == "glfw" ]; then
        ./cppchecker USING_GLFW
    elif [ $Backend == "sfml" ]; then
        ./cppchecker USING_SFML
    fi
fi
